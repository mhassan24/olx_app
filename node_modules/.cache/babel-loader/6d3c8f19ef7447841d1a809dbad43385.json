{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nimport \"firebase/firestore\"; // Your web app's Firebase configuration\n\nlet firebaseConfig = {\n  apiKey: \"AIzaSyAjkvzuZxgzS7JIokzleMalttncOWDxC5Y\",\n  authDomain: \"e-commerce-a35a3.firebaseapp.com\",\n  databaseURL: \"https://e-commerce-a35a3.firebaseio.com\",\n  projectId: \"e-commerce-a35a3\",\n  storageBucket: \"e-commerce-a35a3.appspot.com\",\n  messagingSenderId: \"852004946314\",\n  appId: \"1:852004946314:web:5f52ef4a97b6bff8b1c873\",\n  measurementId: \"G-MY27448CL6\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics(); // Auth Class\n\nclass Firebase {\n  // Authentications\n  signUp(name, email, password) {\n    return new Promise((resolve, reject) => {\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n        firebase.auth().onAuthStateChanged(user => {\n          user.updateProfile({\n            displayName: name\n          }).then(() => resolve(user));\n        });\n      }).catch(er => {\n        reject(er.message);\n      });\n    });\n  }\n\n  logIn(email, password) {\n    return new Promise((resolve, reject) => {\n      firebase.auth().signInWithEmailAndPassword(email, password).then(user => {\n        console.log(user);\n        resolve(user.user);\n      }).catch(er => {\n        reject(er.message);\n      });\n    });\n  }\n\n  signOut() {\n    return new Promise((resolve, reject) => {\n      firebase.auth().signOut().then(() => resolve()).catch(er => reject(er));\n    });\n  }\n\n  isSignIn() {\n    return new Promise((resolve, reject) => {\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          resolve(user);\n        } else {\n          reject();\n        }\n      });\n    });\n  } // Firebase Storage\n\n\n  store(file) {\n    return new Promise((resolve, reject) => {\n      firebase.storage().ref(\"pic/\" + file.name).put(file).then(n => {\n        firebase.storage().ref(n.metadata.fullPath).getDownloadURL().then(url => {\n          resolve(url);\n        }).catch(er => {\n          reject(er);\n          console.log(er);\n        });\n      }).catch(er => {\n        reject(er);\n        console.log(er);\n      });\n    });\n  } // Firestore\n\n\n  storeAd(ad, email) {\n    return new Promise((resolve, reject) => {\n      let publicRef = firebase.firestore().collection(\"publicAds\").doc();\n      publicRef.set(ad).then(() => resolve()).catch(er => reject(er));\n      let userRef = firebase.firestore().collection(email).doc();\n      userRef.set(ad);\n    });\n  }\n\n  getPublicAds() {\n    return new Promise((resolve, reject) => {\n      let publicRef = firebase.firestore().collection(\"publicAds\");\n      let ads = [];\n      publicRef.get().then(docs => {\n        docs.forEach(doc => {\n          ads.push(doc.data());\n        });\n        resolve(ads);\n      }).catch(er => reject(er));\n    });\n  }\n\n  getUserAds(email) {\n    return new Promise((resolve, reject) => {\n      let userRef = firebase.firestore().collection(email);\n      let ads = [];\n      userRef.get().then(docs => {\n        docs.forEach(doc => {\n          ads.push(doc.data());\n        });\n        resolve(ads);\n      }).catch(er => reject(er));\n    });\n  }\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["C:/Users/Mirza/Downloads/olx_clone-master/olx_clone-master/src/Firebase/Firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","analytics","Firebase","signUp","name","email","password","Promise","resolve","reject","auth","createUserWithEmailAndPassword","then","onAuthStateChanged","user","updateProfile","displayName","catch","er","message","logIn","signInWithEmailAndPassword","console","log","signOut","isSignIn","store","file","storage","ref","put","n","metadata","fullPath","getDownloadURL","url","storeAd","ad","publicRef","firestore","collection","doc","set","userRef","getPublicAds","ads","get","docs","forEach","push","data","getUserAds"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nlet firebaseConfig = {\r\n  apiKey: \"AIzaSyAjkvzuZxgzS7JIokzleMalttncOWDxC5Y\",\r\n  authDomain: \"e-commerce-a35a3.firebaseapp.com\",\r\n  databaseURL: \"https://e-commerce-a35a3.firebaseio.com\",\r\n  projectId: \"e-commerce-a35a3\",\r\n  storageBucket: \"e-commerce-a35a3.appspot.com\",\r\n  messagingSenderId: \"852004946314\",\r\n  appId: \"1:852004946314:web:5f52ef4a97b6bff8b1c873\",\r\n  measurementId: \"G-MY27448CL6\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\n// Auth Class\r\nclass Firebase {\r\n  // Authentications\r\n  signUp(name, email, password) {\r\n    return new Promise((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          firebase.auth().onAuthStateChanged(user => {\r\n            user\r\n              .updateProfile({\r\n                displayName: name\r\n              })\r\n              .then(() => resolve(user));\r\n          });\r\n        })\r\n        .catch(er => {\r\n          reject(er.message);\r\n        });\r\n    });\r\n  }\r\n\r\n  logIn(email, password) {\r\n    return new Promise((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then(user => {\r\n          console.log(user);\r\n\r\n          resolve(user.user);\r\n        })\r\n        .catch(er => {\r\n          reject(er.message);\r\n        });\r\n    });\r\n  }\r\n\r\n  signOut() {\r\n    return new Promise((resolve, reject) => {\r\n      firebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => resolve())\r\n        .catch(er => reject(er));\r\n    });\r\n  }\r\n\r\n  isSignIn() {\r\n    return new Promise((resolve, reject) => {\r\n      firebase.auth().onAuthStateChanged(user => {\r\n        if (user) {\r\n          resolve(user);\r\n        } else {\r\n          reject();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Firebase Storage\r\n  store(file) {\r\n    return new Promise((resolve, reject) => {\r\n      firebase\r\n        .storage()\r\n        .ref(\"pic/\" + file.name)\r\n        .put(file)\r\n        .then(n => {\r\n          firebase\r\n            .storage()\r\n            .ref(n.metadata.fullPath)\r\n            .getDownloadURL()\r\n            .then(url => {\r\n              resolve(url);\r\n            })\r\n            .catch(er => {\r\n              reject(er);\r\n              console.log(er);\r\n            });\r\n        })\r\n        .catch(er => {\r\n          reject(er);\r\n          console.log(er);\r\n        });\r\n    });\r\n  }\r\n\r\n  // Firestore\r\n  storeAd(ad, email) {\r\n    return new Promise((resolve, reject) => {\r\n      let publicRef = firebase\r\n        .firestore()\r\n        .collection(\"publicAds\")\r\n        .doc();\r\n\r\n      publicRef\r\n        .set(ad)\r\n        .then(() => resolve())\r\n        .catch(er => reject(er));\r\n\r\n      let userRef = firebase\r\n        .firestore()\r\n        .collection(email)\r\n        .doc();\r\n\r\n      userRef.set(ad);\r\n    });\r\n  }\r\n\r\n  getPublicAds() {\r\n    return new Promise((resolve, reject) => {\r\n      let publicRef = firebase.firestore().collection(\"publicAds\");\r\n      let ads = [];\r\n\r\n      publicRef\r\n        .get()\r\n        .then(docs => {\r\n          docs.forEach(doc => {\r\n            ads.push(doc.data());\r\n          });\r\n\r\n          resolve(ads);\r\n        })\r\n        .catch(er => reject(er));\r\n    });\r\n  }\r\n\r\n  getUserAds(email) {\r\n    return new Promise((resolve, reject) => {\r\n      let userRef = firebase.firestore().collection(email);\r\n      let ads = [];\r\n\r\n      userRef\r\n        .get()\r\n        .then(docs => {\r\n          docs.forEach(doc => {\r\n            ads.push(doc.data());\r\n          });\r\n\r\n          resolve(ads);\r\n        })\r\n        .catch(er => reject(er));\r\n    });\r\n  }\r\n}\r\nexport default new Firebase();\r\n"]},"metadata":{},"sourceType":"module"}